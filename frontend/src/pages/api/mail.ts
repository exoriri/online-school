import nodemailer from "nodemailer";

async function main(name, number, description) {
  let transporter = nodemailer.createTransport({
    host: "smtp.gmail.com",
    requireTLS: false,
    secure: false,
    service: 'Gmail',
    auth: {
      user: "romchikacc@gmail.com",
      pass: "R2#uotochuvak19977",
    },
    tls: {
      // do not fail on invalid certs
      rejectUnauthorized: false,
    },
  });
  let info = await transporter.sendMail({
    from: '"Essential skills " <foo@example.com>',
    to: "essentialskills2@gmail.com",
    subject: "–ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫ üëª",
    text: "–ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫ üëª",
    html: `<p><b>–ò–º—è: ${name}</b></p>
           <p><b>–ù–æ–º–µ—Ä –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç: ${number}</b></p>
           <p><b>–û–ø–∏—Å–∞–Ω–∏–µ: ${description}</b></p>
    `,
  });
}

export default async function handler(req, res) {
  if (req.method === "POST") {
    const { name, number, description, c_token } = req.body;
    res.setHeader("Content-Type", "application/json");
    res.statusCode = 200;

    let captchaResponse: any = await fetch(
      `https://www.google.com/recaptcha/api/siteverify?secret=6Ldp-yseAAAAAG3JYpazb4cdJ_YT-Aqy2aJTRc8n&response=${c_token}`,
      {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded",
        },
      }
    );
    captchaResponse = await captchaResponse.json();

    if (!captchaResponse.success) {
      res.end(
        JSON.stringify({
          success: false,
          message: "–ë–æ—Ç–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã!",
        })
      );
    }

    if (name !== "" && number !== "" && description !== "") {
      await main(name, number, description);
      res.end(
        JSON.stringify({
          success: true,
          message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è",
        })
      );
    } else {
      res.end(
        JSON.stringify({
          success: false,
          message: "–ü–æ–ª—è –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–µ",
        })
      );
    }
  }
}
