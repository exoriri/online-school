{"ast":null,"code":"import nodemailer from 'nodemailer';\n\nasync function main(name, number) {\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 587,\n    requireTLS: false,\n    secure: false,\n    auth: {\n      user: 'teavedeniye@gmail.com',\n      pass: 'R2#uotochuvak1997'\n    }\n  });\n  let info = await transporter.sendMail({\n    from: '\"Essential skills \" <foo@example.com>',\n    to: \"essentialskills2@gmail.com\",\n    subject: \"–ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫ üëª\",\n    text: \"–ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫ üëª\",\n    html: `<p><b>–ò–º—è: ${name}</b></p>\n           <p><b>–ù–æ–º–µ—Ä –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç: ${number}</b></p>`\n  });\n  console.log(\"Message sent: %s\", info.messageId);\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n}\n\nexport default async function handler(req, res) {\n  const {\n    name,\n    number\n  } = req.body;\n  res.setHeader('Content-Type', 'application/json');\n  res.statusCode = 200;\n\n  if (name !== '' && number !== '') {\n    await main(name, number);\n    res.end(JSON.stringify({\n      success: true,\n      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è'\n    }));\n  } else {\n    res.end(JSON.stringify({\n      success: false,\n      message: '–ü–æ–ª—è –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–µ'\n    }));\n  }\n}\n;","map":{"version":3,"sources":["/Users/romanlavrik/Documents/work/online-school/frontend/src/pages/api/mail.ts"],"names":["nodemailer","main","name","number","transporter","createTransport","host","port","requireTLS","secure","auth","user","pass","info","sendMail","from","to","subject","text","html","console","log","messageId","getTestMessageUrl","handler","req","res","body","setHeader","statusCode","end","JSON","stringify","success","message"],"mappings":"AACA,OAAOA,UAAP,MAAuB,YAAvB;;AAEA,eAAeC,IAAf,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAChC,MAAIC,WAAW,GAAGJ,UAAU,CAACK,eAAX,CAA2B;AAC3CC,IAAAA,IAAI,EAAE,gBADqC;AAE3CC,IAAAA,IAAI,EAAE,GAFqC;AAG3CC,IAAAA,UAAU,EAAE,KAH+B;AAI3CC,IAAAA,MAAM,EAAE,KAJmC;AAK3CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,uBADF;AAEJC,MAAAA,IAAI,EAAE;AAFF;AALqC,GAA3B,CAAlB;AAWA,MAAIC,IAAI,GAAG,MAAMT,WAAW,CAACU,QAAZ,CAAqB;AACpCC,IAAAA,IAAI,EAAE,uCAD8B;AAEpCC,IAAAA,EAAE,EAAE,4BAFgC;AAGpCC,IAAAA,OAAO,EAAE,iBAH2B;AAIpCC,IAAAA,IAAI,EAAE,iBAJ8B;AAKpCC,IAAAA,IAAI,EAAG,cAAajB,IAAK;AAC7B,sCAAsCC,MAAO;AANL,GAArB,CAAjB;AASAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,IAAI,CAACS,SAArC;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BrB,UAAU,CAACuB,iBAAX,CAA6BV,IAA7B,CAA/B;AACD;;AAED,eAAe,eAAeW,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5C,QAAM;AAAExB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBsB,GAAG,CAACE,IAA7B;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAF,EAAAA,GAAG,CAACG,UAAJ,GAAiB,GAAjB;;AAEA,MAAI3B,IAAI,KAAK,EAAT,IAAeC,MAAM,KAAK,EAA9B,EAAkC;AAC9B,UAAMF,IAAI,CAACC,IAAD,EAAOC,MAAP,CAAV;AACAuB,IAAAA,GAAG,CAACI,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAf,CAAR;AACH,GAHD,MAGO;AACHR,IAAAA,GAAG,CAACI,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAf,CAAR;AACH;AAEF;AAAA","sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next'\nimport nodemailer from 'nodemailer';\n\nasync function main(name, number) {\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 587,\n    requireTLS: false,\n    secure: false,\n    auth: {\n      user: 'teavedeniye@gmail.com',\n      pass: 'R2#uotochuvak1997',\n    },\n  });\n\n  let info = await transporter.sendMail({\n    from: '\"Essential skills \" <foo@example.com>',\n    to: \"essentialskills2@gmail.com\",\n    subject: \"–ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫ üëª\",\n    text: \"–ù–æ–≤—ã–π —É—á–µ–Ω–∏–∫ üëª\",\n    html: `<p><b>–ò–º—è: ${name}</b></p>\n           <p><b>–ù–æ–º–µ—Ä –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç: ${number}</b></p>`,\n  });\n\n  console.log(\"Message sent: %s\", info.messageId);\n\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n}\n\nexport default async function handler(req, res) {\n    const { name, number } = req.body;\n    res.setHeader('Content-Type', 'application/json');\n    res.statusCode = 200\n\n    if (name !== '' && number !== '') {\n        await main(name, number);\n        res.end(JSON.stringify({ success: true, message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è'  }));\n    } else {\n        res.end(JSON.stringify({ success: false, message: '–ü–æ–ª—è –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–µ' }))\n    }\n\n  };"]},"metadata":{},"sourceType":"module"}